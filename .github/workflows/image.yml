# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
# Copyright 2021 Nuvolaris LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Build OpenServerless Streamer

on:
  push:
    tags:
    - '[0-9]*'
    branches-ignore:
    - '*'
jobs:
  image:
    name: Build OpenServerless Streamer Image
    runs-on: ubuntu-latest
    steps:
      - name: Remove unnecessary files
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"    
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: License
        uses: apache/skywalking-eyes@main
      - name: Assign TAG from pull request
        if:  ${{ github.event_name == 'pull_request' }}
        run: |
          echo "IMG_TAG=$(git rev-parse --short HEAD)" >> "$GITHUB_ENV"
      - name: Assign TAG from push
        if:  ${{ github.event_name != 'pull_request' }}
        run: |
          echo "IMG_TAG=$(git describe --tags --abbrev=0)" >> "$GITHUB_ENV"
      - name: Registry login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: nuvolaris
          password: ${{ secrets.GITHUB_TOKEN }}          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: "lab:latest"
          use: true
      - name: Build and push
        uses: docker/build-push-action@v5
        with:          
          platforms: linux/amd64
          tags: ghcr.io/nuvolaris/openserverless-streamer:${{ env.IMG_TAG }}       
          # For pull requests, export results to the build cache.
          # Otherwise, push to a registry.
          outputs: ${{ github.event_name == 'pull_request' && 'type=cacheonly' || 'type=registry,push=true' }}